{"version":3,"sources":["assets/ghost-01.png","Stories.js","prompts.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Stories","props","className","aria-hidden","displayStory","map","greatStory","key","id","selectedPrompt","selectedInput","onClick","handleRemove","prompts","number","plot","author","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","generateRandomNumber","setState","Math","floor","random","handleGenerate","handleChange","event","storyInput","target","value","handleClick","preventDefault","state","trim","alert","dbRef","database","ref","storyPrompt","push","storyId","child","remove","liveStory","on","snapshot","data","val","newState","newObject","src","image","alt","this","action","aria-label","htmlFor","name","cols","rows","maxLength","placeholder","onChange","length","href","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.93c79f89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ghost-01.b82f3ce6.png\";","import React from 'react';\r\n\r\n\r\nconst Stories = ( props ) => {\r\n    \r\n    return (\r\n        \r\n            <ul>\r\n                <li className=\"storyPost\">\r\n                    <h4>It is perched on a branch, not far from my window, watching with an unfathomable black eye.</h4>\r\n                    <p>Once upon a midnight dreary, while I pondered, weak and weary,\r\n                        Over many a quaint and curious volume of forgotten lore—\r\n                        While I nodded, nearly napping, suddenly there came a tapping,\r\n                        As of some one gently rapping, rapping at my chamber door.\r\n                        “’Tis some visitor,” I muttered, “tapping at my chamber door—\r\n                        Only this and nothing more.” - Edgar Allan Poe\r\n                    </p>\r\n                    <p className=\"placeholderText\">I am a placehold'r, thee can't fordid me</p>\r\n                    <button aria-hidden=\"true\" className=\"deleteButton\">X</button>\r\n                </li>\r\n\r\n            {\r\n                props.displayStory.map((greatStory) => {\r\n                    return (\r\n                        <li className=\"storyPost\" key={greatStory.id}>\r\n                            <h4>{greatStory.selectedPrompt}</h4>\r\n                            <p>{greatStory.selectedInput}</p>\r\n                            <button onClick={ () => props.handleRemove(greatStory.id) } className=\"deleteButton\" >X</button>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default Stories;","// The array containing the prompt objects\r\nconst prompts = [\r\n    {\r\n        number: 1,\r\n        plot: \"“If you are in here, then who is that out there?”\",\r\n        author: \"Ben Carson\"\r\n    },\r\n        \r\n    {\r\n        number: 2,\r\n        plot: \"I saw movement in the church. I shouldn’t have gone in.\",\r\n        author: \"Damien Thorn\"\r\n    },\r\n\r\n    {\r\n        number: 3,\r\n        plot: \"REDRUM.\",\r\n        author: \"Johnny\"\r\n    },\r\n\r\n    {\r\n        number: 4,\r\n        plot: \"I have been waking up in the middle of the night for no reason. Tonight I know why.\",\r\n        author: \"Nightowl\"\r\n    },\r\n\r\n    {\r\n        number: 5,\r\n        plot: \"My pregnant wife has a disturbing craving.\",\r\n        author: \"Guy Woodhouse\"\r\n    },\r\n\r\n    {\r\n        number: 6,\r\n        plot: \"You’ve always hated silence. When it’s silent, they come back for you.\",\r\n        author: \"Mary Shaw\"\r\n    },\r\n\r\n    {\r\n        number: 7,\r\n        plot: \"There is a padlock in the basement.\",\r\n        author: \"Doctor Brewer\"\r\n    },\r\n\r\n    {\r\n        number: 8,\r\n        plot: \"There is always blood on the axe in the shed.\",\r\n        author: \"Jason Voorhees\"\r\n    },\r\n\r\n    {\r\n        number: 9,\r\n        plot: \"I was lying in bed with my foot dangling over the edge. I felt a hand grab my foot.\",\r\n        author: \"James P. Sullivan\"\r\n    },\r\n\r\n    {\r\n        number: 10,\r\n        plot: \"The grandfather clock that has been in your family for generations started running backward.\",\r\n        author: \"Alexander Hartdegen\"\r\n    },\r\n    \r\n    {\r\n        number: 11,\r\n        plot: \"Her eyes are sharp, her teeth are sharper.\",\r\n        author: \"Vampira\"\r\n    },\r\n\r\n    {\r\n        number: 12,\r\n        plot: \"I just saw my reflection blink.\",\r\n        author: \"Bloody Mary\"\r\n    },\r\n\r\n    {\r\n        number: 13,\r\n        plot: \"I went upstairs to check on my toddler. The window was open and the bed empty.\",\r\n        author: \"Goblin King\"\r\n    },\r\n\r\n    {\r\n        number: 14,\r\n        plot: \"The last man on earth sat alone in the room. There was knock on the door.\",\r\n        author: \"Will Smith\"\r\n    },\r\n\r\n    {\r\n        number: 15,\r\n        plot: \"My partner asked me why I was breathing so heavily. It wasn't me.\",\r\n        author: \"Scooby Doo\"\r\n    },\r\n\r\n    \r\n    {\r\n        number: 16,\r\n        plot: \"There is a picture of me sleeping in my phone. I live alone.\",\r\n        author: \"Beth Raymond\"\r\n    },\r\n\r\n    {\r\n        number: 17,\r\n        plot: \"The grinning face stared at me in the darkness outside my window.\",\r\n        author: \"Pennywise\"\r\n    },\r\n\r\n    {\r\n        number: 18,\r\n        plot: \"“There are monsters under my bed. I can hear them breathing.”\",\r\n        author: \"Carol Anne Freeling\"\r\n    },\r\n\r\n    {\r\n        number: 19,\r\n        plot: \"I used the oujia board last night. I got the answer today, in blood.\",\r\n        author: \"Laine Morris\"\r\n    },\r\n\r\n    {\r\n        number: 20,\r\n        plot: \"The wailing from the baby monitor won't stop. There is no child.\",\r\n        author: \"Chucky\"\r\n    },\r\n\r\n    {\r\n        number: 21,\r\n        plot: \"I heard footsteps in the unit above me. It has been vacant for months.\",\r\n        author: \"Casper\"\r\n    },\r\n\r\n    {\r\n        number: 22,\r\n        plot: \"For sale, pair of baby shoes, never worn.\",\r\n        author: \"Morticia Adams\"\r\n    },\r\n\r\n    {\r\n        number: 23,\r\n        plot: \"The knife, it slices so smoothly.\",\r\n        author: \"Norman Bates\"\r\n    },\r\n\r\n    {\r\n        number: 24,\r\n        plot: \"Delicious, the eyeballs were the best.\",\r\n        author: \"Hannibal Lecter\"\r\n    },\r\n\r\n    {\r\n        number: 25,\r\n        plot: \"I saw the children swinging. Their bodies have been hanging for days.\",\r\n        author: \"Bughuul\"\r\n    },\r\n\r\n    {\r\n        number: 26,\r\n        plot: \"Roses are red. Violets are blue. There is someone right behind you.\",\r\n        author: \"Slimer\"\r\n    },\r\n\r\n    {\r\n        number: 27,\r\n        plot: \"Ring-a-ring-a-rosies. A pocket full of posies. Ashes, ashes. We all fall down.\",\r\n        author: \"Black Death\"\r\n    },\r\n\r\n    {\r\n        number: 28,\r\n        plot: \"Why won't it compile?!\",\r\n        author: \"Cohort 28 :(\"\r\n    },\r\n\r\n    {\r\n        number: 29,\r\n        plot: \"I got a doll delivered today. At night, I heard the bubble wrap popping.\",\r\n        author: \"Anne\"\r\n    },\r\n\r\n    {\r\n\r\n        number: 30,\r\n        plot: \"I was fascinated by how much my brain resembled oatmeal, splattered on the concrete.\",\r\n        author: \"Sam Wheat\"\r\n    }\r\n\r\n]\r\n\r\nexport default prompts;","import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD28M6a8QMoniBupxuBqRR9uHm-GViANwE\",\r\n    authDomain: \"ghost-writer-7d08c.firebaseapp.com\",\r\n    databaseURL: \"https://ghost-writer-7d08c.firebaseio.com\",\r\n    projectId: \"ghost-writer-7d08c\",\r\n    storageBucket: \"ghost-writer-7d08c.appspot.com\",\r\n    messagingSenderId: \"767658760377\",\r\n    appId: \"1:767658760377:web:d877b741931fdce6ffa368\"\r\n};\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component } from 'react';\nimport Stories from './Stories';\n\nimport prompts from './prompts';\nimport firebase from './firebase';\n\nimport image from './assets/ghost-01.png';\nimport './styles/app.scss';\n\nclass App extends Component {\n  constructor() {\n    super();  \n    this.state = {\n      // Random number that selects a plot prompt from the list of prompts\n      number: 0,\n\n      // Holds array of input and current quote\n      liveStory: [],\n\n      // Empty string to hold story input from handleChange\n      storyInput: '',\n      \n    }\n  }\n\n  componentDidMount() {\n\n    // Variable that holds the reference to our database\n    const dbRef = firebase.database().ref();\n\n    // Event listener that will fire every time there is a change in the database\n    // It contains a callback function that will be used to get the data, and the data is known as 'response'\n    dbRef.on('value', (snapshot) => {\n      \n      // Storing the response from our Firebase query into a variable called data\n      const data = snapshot.val();\n\n      // Empty variable to store new state\n      const newState = [];\n\n      for (let key in data) {\n\n        // Create new Object to contain the response and key to be looped through\n        const newObject = data[key];\n\n        // Attach new property 'id' into the object = newObject\n        newObject['id'] = key;\n\n        // Push newObject into empty newState array\n        newState.push(newObject);\n      }\n\n      // Set the state of liveStory to newState and update the DOM dynamically\n      this.setState({\n        liveStory: newState\n      })\n    });\n  }\n\n  // Function to generate random prompts from the prompt module\n  generateRandomNumber = () => {\n    this.setState({\n      number: (Math.floor(Math.random() * 30))\n    });\n  }\n\n  // Click handler to generate prompt when button is clicked\n  handleGenerate = () => {\n    this.generateRandomNumber();\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      storyInput: event.target.value\n    })\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n\n    // Error handling, to prompt alert when white space is entered to the text area\n    // Else push user Input and selected prompt to Firebase\n    if (this.state.storyInput.trim() === \"\") {\n      alert(\"You haven't shared your dark secrets with us!\")\n\n    } else {\n      const dbRef = firebase.database().ref();\n\n      // User input and selected story prompt are stored in a variable\n      const storyPrompt = {\n        selectedPrompt: prompts[this.state.number].plot,\n        selectedInput: this.state.storyInput\n      }\n\n      dbRef.push(storyPrompt);\n\n      this.setState({\n        storyInput: ''\n      })\n    }\n  }  \n  \n  // Handle function to delete posted stories, it passed to the child component in the display section\n  handleRemove = (storyId) => {\n\n    const dbRef = firebase.database().ref();\n    dbRef.child(storyId).remove();\n\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n\n        {/* Header */}\n        <header >\n          <div className=\"wrapper\">\n\n            <div className=\"headerContainer\">\n              <div className=\"titleContainer\">\n                <h1>Ghostwriter</h1>\n                <h2>Let your inner spirit guide you</h2>\n              </div>\n              \n              <div className=\"imageContainer\">\n                  <img src={image} alt=\"Cute ghost with a pencil\"/>\n              </div>\n            </div>\n          </div>\n        </header>\n        {/* End of Header  */}\n\n        {/* Main Section */}\n        <main className=\"wrapper\">\n\n            {/* Prompt Section */}\n\n            <div className=\"promptEntry\">\n              <div className=\"generatePrompt\">\n                <h3 className=\"prompt\">{prompts[this.state.number].plot}</h3>\n                <h3 className=\"author\">{prompts[this.state.number].author}</h3>\n              </div>\n              <button className=\"promptButton\" onClick={this.handleGenerate}>Generate a prompt</button>\n            </div>\n\n            {/* Story Input Section */}\n            <div className=\"storyInput\">\n              <p>Share your dark tale with us</p>\n              <form action=\"submit\">\n                <label aria-label=\"Share your dark tale with us\" htmlFor=\"newStory\"></label>\n                <textarea\n                  name=\"newStory\" \n                  id=\"newStory\"\n                  cols=\"70\"\n                  rows=\"10\"\n                  maxLength=\"500\"\n                  placeholder=\"It was a dark and stormy night...\"\n                  onChange={this.handleChange} \n                  value={this.state.storyInput}\n                />\n                <button className=\"submitButton\" onClick={this.handleClick}>Submit</button>\n              </form>\n\n              <p className=\"characterLength\">{500 - this.state.storyInput.length} characters left</p>\n            </div>\n            \n            {/* Display Section */}\n            <div className=\"displayStory\">\n\n                <Stories \n                  displayStory = { this.state.liveStory }\n                  handleRemove = { this.handleRemove }\n                />\n\n            </div>\n\n        </main>\n        {/* End of Main Section */}\n        \n        <footer className=\"wrapper\">\n          <p>Developed by Pik Lin | Image from <a href=\"https://www.freepik.com/\">Freepik</a></p>\n        </footer>\n      </div>\n      // End of App Section\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}